{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\xampp\\\\Node1\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\xampp\\\\Node1\",\"filename\":\"C:\\\\xampp\\\\Node1\\\\server\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\Node1\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.5:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\n_dotenv[\"default\"].config();\n\nvar Pool = require('pg').Pool;\n\nvar pool = new Pool({\n  host: \"localhost\",\n  user: \"postgres\",\n  password: \"kevingreat\",\n  database: \"W2Q1\",\n  port: 5432\n});\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\nvar port = process.env.PORT || 3003;\napp.listen(port, function () {\n  console.log('Server listening on port ' + port);\n}); //Tabel Region\n\napp.get('/api/region', function (req, res) {\n  pool.query('select * from regions', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from regions where region_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/region/', function (req, res) {\n  var region_name = req.body.region_name;\n  pool.query('insert into regions (region_name) values ($1)', [region_name], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  var name = req.body.name;\n  pool.query(\"update regions set region_name=$1 where region_id=$2\", [name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from regions where region_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Country\n\napp.get('/api/country', function (req, res) {\n  pool.query('select * from countries', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from countries where country_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/country/', function (req, res) {\n  var _req$body = req.body,\n      country_id = _req$body.country_id,\n      country_name = _req$body.country_name,\n      region_id = _req$body.region_id;\n  pool.query('insert into countries (country_id,country_name,region_id) values ($1,$2,$3)', [country_id, country_name, region_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  var country_name = req.body.country_name;\n  pool.query(\"update countries set country_name=$1 where country_id=$2\", [country_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from countries where country_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Location\n\napp.get('/api/location', function (req, res) {\n  pool.query('select * from locations', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from locations where location_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/location/', function (req, res) {\n  var _req$body2 = req.body,\n      location_id = _req$body2.location_id,\n      street_address = _req$body2.street_address,\n      postal_code = _req$body2.postal_code,\n      city = _req$body2.city,\n      state_province = _req$body2.state_province,\n      country_id = _req$body2.country_id;\n  pool.query('insert into locations (location_id, street_address, postal_code, city, state_province, country_id) values ($1,$2,$3,$4,$5,$6)', [location_id, street_address, postal_code, city, state_province, country_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  var city = req.body.city;\n  pool.query(\"update locations set city=$1 where location_id=$2\", [city, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from locations where location_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Departments\n\napp.get('/api/department', function (req, res) {\n  pool.query('select * from departments', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from departments where department_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/department/', function (req, res) {\n  var _req$body3 = req.body,\n      department_id = _req$body3.department_id,\n      department_name = _req$body3.department_name,\n      location_id = _req$body3.location_id;\n  pool.query('insert into departments (department_id,department_name, location_id) values ($1,$2,$3)', [department_id, department_name, location_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  var department_name = req.body.department_name;\n  pool.query(\"update departments set department_name=$1 where department_id=$2\", [department_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from departments where department_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Jobs\n\napp.get('/api/job', function (req, res) {\n  pool.query('select * from jobs', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from jobs where job_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/job/', function (req, res) {\n  var _req$body4 = req.body,\n      job_id = _req$body4.job_id,\n      job_title = _req$body4.job_title,\n      min_salary = _req$body4.min_salary,\n      max_salary = _req$body4.max_salary;\n  pool.query('insert into jobs (job_id,job_title, min_salary,max_salary) values ($1,$2,$3,$4)', [job_id, job_title, min_salary, max_salary], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  var job_title = req.body.job_title;\n  pool.query(\"update jobs set job_title=$1 where job_id=$2\", [job_title, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from jobs where job_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Employee\n\napp.get('/api/employee', function (req, res) {\n  pool.query('select * from employees', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from employees where employee_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/employee/', function (req, res) {\n  var _req$body5 = req.body,\n      first_name = _req$body5.first_name,\n      last_name = _req$body5.last_name,\n      email = _req$body5.email,\n      phone_number = _req$body5.phone_number,\n      hire_date = _req$body5.hire_date,\n      job_id = _req$body5.job_id,\n      salary = _req$body5.salary,\n      manager_id = _req$body5.manager_id,\n      department_id = _req$body5.department_id,\n      proj_account_mgr = _req$body5.proj_account_mgr;\n  pool.query('insert into employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)', [first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  var first_name = req.body.first_name;\n  pool.query(\"update employees set first_name=$1 where employee_id=$2\", [first_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from employees where employee_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Dependent\n\napp.get('/api/dependent', function (req, res) {\n  pool.query('select * from dependents', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from dependents where dependent_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/dependent/', function (req, res) {\n  var _req$body6 = req.body,\n      dependent_id = _req$body6.dependent_id,\n      first_name = _req$body6.first_name,\n      last_name = _req$body6.last_name,\n      relationship = _req$body6.relationship,\n      employee_id = _req$body6.employee_id;\n  pool.query('insert into dependents (dependent_id,first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4,$5)', [dependent_id, first_name, last_name, relationship, employee_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  var first_name = req.body.first_name;\n  pool.query(\"update dependents set first_name=$1 where dependent_id=$2\", [first_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from dependents where dependent_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["dotenv","config","Pool","require","pool","host","user","password","database","port","app","express","use","json","process","env","PORT","listen","console","log","get","req","res","query","error","result","status","rows","id","params","post","region_name","body","rowCount","put","name","country_id","country_name","region_id","location_id","street_address","postal_code","city","state_province","department_id","department_name","job_id","job_title","min_salary","max_salary","first_name","last_name","email","phone_number","hire_date","salary","manager_id","proj_account_mgr","dependent_id","relationship","employee_id"],"sourceRoot":"C:\\xampp\\Node1\\server\\","sources":["index.js"],"sourcesContent":["import dotenv from \"dotenv\"\r\nimport express from \"express\"\r\ndotenv.config()\r\n\r\nconst Pool = require('pg').Pool;\r\nconst pool = new Pool({\r\n    host : \"localhost\",\r\n    user : \"postgres\",\r\n    password  : \"kevingreat\",\r\n    database : \"W2Q1\",\r\n    port : 5432\r\n})\r\n\r\nconst app = express()\r\napp.use(express.json())\r\n\r\nconst port = process.env.PORT || 3003\r\n\r\napp.listen(port,()=>{console.log('Server listening on port '+port)})\r\n\r\n//Tabel Region\r\napp.get('/api/region',(req,res)=>{\r\n    pool.query('select * from regions',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/region/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from regions where region_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/region/',(req,res)=>{\r\n    const {region_name} = req.body\r\n    pool.query('insert into regions (region_name) values ($1)',\r\n    [region_name],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/region/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {name} = req.body\r\n    pool.query(\"update regions set region_name=$1 where region_id=$2\",\r\n    [name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/region/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from regions where region_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Country\r\napp.get('/api/country',(req,res)=>{\r\n    pool.query('select * from countries',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/country/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from countries where country_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/country/',(req,res)=>{\r\n    const {country_id,country_name,region_id} = req.body\r\n    pool.query('insert into countries (country_id,country_name,region_id) values ($1,$2,$3)',\r\n    [country_id,country_name,region_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/country/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {country_name} = req.body\r\n    pool.query(\"update countries set country_name=$1 where country_id=$2\",\r\n    [country_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/country/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from countries where country_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Location\r\napp.get('/api/location',(req,res)=>{\r\n    pool.query('select * from locations',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/location/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from locations where location_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/location/',(req,res)=>{\r\n    const {location_id, street_address, postal_code, city, state_province, country_id} = req.body\r\n    pool.query('insert into locations (location_id, street_address, postal_code, city, state_province, country_id) values ($1,$2,$3,$4,$5,$6)',\r\n    [location_id, street_address, postal_code, city, state_province, country_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/location/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {city} = req.body\r\n    pool.query(\"update locations set city=$1 where location_id=$2\",\r\n    [city,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/location/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from locations where location_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Departments\r\napp.get('/api/department',(req,res)=>{\r\n    pool.query('select * from departments',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/department/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from departments where department_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/department/',(req,res)=>{\r\n    const {department_id,department_name, location_id} = req.body\r\n    pool.query('insert into departments (department_id,department_name, location_id) values ($1,$2,$3)',\r\n    [department_id,department_name, location_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/department/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {department_name} = req.body\r\n    pool.query(\"update departments set department_name=$1 where department_id=$2\",\r\n    [department_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/department/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from departments where department_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Jobs\r\napp.get('/api/job',(req,res)=>{\r\n    pool.query('select * from jobs',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/job/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from jobs where job_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/job/',(req,res)=>{\r\n    const {job_id,job_title, min_salary,max_salary} = req.body\r\n    pool.query('insert into jobs (job_id,job_title, min_salary,max_salary) values ($1,$2,$3,$4)',\r\n    [job_id,job_title, min_salary,max_salary],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/job/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {job_title} = req.body\r\n    pool.query(\"update jobs set job_title=$1 where job_id=$2\",\r\n    [job_title,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/job/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from jobs where job_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Employee\r\napp.get('/api/employee',(req,res)=>{\r\n    pool.query('select * from employees',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/employee/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from employees where employee_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/employee/',(req,res)=>{\r\n    const {first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr} = req.body\r\n    pool.query('insert into employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)',\r\n    [first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/employee/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {first_name} = req.body\r\n    pool.query(\"update employees set first_name=$1 where employee_id=$2\",\r\n    [first_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/employee/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from employees where employee_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Dependent\r\napp.get('/api/dependent',(req,res)=>{\r\n    pool.query('select * from dependents',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/dependent/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from dependents where dependent_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/dependent/',(req,res)=>{\r\n    const {dependent_id,first_name, last_name, relationship, employee_id} = req.body\r\n    pool.query('insert into dependents (dependent_id,first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4,$5)',\r\n    [dependent_id,first_name, last_name, relationship, employee_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/dependent/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {first_name} = req.body\r\n    pool.query(\"update dependents set first_name=$1 where dependent_id=$2\",\r\n    [first_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/dependent/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from dependents where dependent_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})"],"mappings":"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"}},"mtime":1655371815027},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\xampp\\\\Quiz NodeJs\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\xampp\\\\Quiz NodeJs\",\"filename\":\"C:\\\\xampp\\\\Quiz NodeJs\\\\server\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\Quiz NodeJs\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.5:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\n_dotenv[\"default\"].config();\n\nvar Pool = require('pg').Pool;\n\nvar pool = new Pool({\n  host: \"localhost\",\n  user: \"postgres\",\n  password: \"kevingreat\",\n  database: \"W2Q1\",\n  port: 5432\n});\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\nvar port = process.env.PORT || 3003;\napp.listen(port, function () {\n  console.log('Server listening on port ' + port);\n}); //Tabel Region\n\napp.get('/api/region', function (req, res) {\n  pool.query('select * from regions', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from regions where region_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/region/', function (req, res) {\n  var region_name = req.body.region_name;\n  pool.query('insert into regions (region_name) values ($1)', [region_name], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  var name = req.body.name;\n  pool.query(\"update regions set region_name=$1 where region_id=$2\", [name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from regions where region_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Country\n\napp.get('/api/country', function (req, res) {\n  pool.query('select * from countries', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from countries where country_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/country/', function (req, res) {\n  var _req$body = req.body,\n      country_id = _req$body.country_id,\n      country_name = _req$body.country_name,\n      region_id = _req$body.region_id;\n  pool.query('insert into countries (country_id,country_name,region_id) values ($1,$2,$3)', [country_id, country_name, region_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  var country_name = req.body.country_name;\n  pool.query(\"update countries set country_name=$1 where country_id=$2\", [country_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from countries where country_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Location\n\napp.get('/api/location', function (req, res) {\n  pool.query('select * from locations', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from locations where location_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/location/', function (req, res) {\n  var _req$body2 = req.body,\n      location_id = _req$body2.location_id,\n      street_address = _req$body2.street_address,\n      postal_code = _req$body2.postal_code,\n      city = _req$body2.city,\n      state_province = _req$body2.state_province,\n      country_id = _req$body2.country_id;\n  pool.query('insert into locations (location_id, street_address, postal_code, city, state_province, country_id) values ($1,$2,$3,$4,$5,$6)', [location_id, street_address, postal_code, city, state_province, country_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  var city = req.body.city;\n  pool.query(\"update locations set city=$1 where location_id=$2\", [city, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from locations where location_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Departments\n\napp.get('/api/department', function (req, res) {\n  pool.query('select * from departments', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from departments where department_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/department/', function (req, res) {\n  var _req$body3 = req.body,\n      department_id = _req$body3.department_id,\n      department_name = _req$body3.department_name,\n      location_id = _req$body3.location_id;\n  pool.query('insert into departments (department_id,department_name, location_id) values ($1,$2,$3)', [department_id, department_name, location_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  var department_name = req.body.department_name;\n  pool.query(\"update departments set department_name=$1 where department_id=$2\", [department_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from departments where department_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Jobs\n\napp.get('/api/job', function (req, res) {\n  pool.query('select * from jobs', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from jobs where job_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/job/', function (req, res) {\n  var _req$body4 = req.body,\n      job_id = _req$body4.job_id,\n      job_title = _req$body4.job_title,\n      min_salary = _req$body4.min_salary,\n      max_salary = _req$body4.max_salary;\n  pool.query('insert into jobs (job_id,job_title, min_salary,max_salary) values ($1,$2,$3,$4)', [job_id, job_title, min_salary, max_salary], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  var job_title = req.body.job_title;\n  pool.query(\"update jobs set job_title=$1 where job_id=$2\", [job_title, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from jobs where job_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Employee\n\napp.get('/api/employee', function (req, res) {\n  pool.query('select * from employees', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from employees where employee_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/employee/', function (req, res) {\n  var _req$body5 = req.body,\n      first_name = _req$body5.first_name,\n      last_name = _req$body5.last_name,\n      email = _req$body5.email,\n      phone_number = _req$body5.phone_number,\n      hire_date = _req$body5.hire_date,\n      job_id = _req$body5.job_id,\n      salary = _req$body5.salary,\n      manager_id = _req$body5.manager_id,\n      department_id = _req$body5.department_id,\n      proj_account_mgr = _req$body5.proj_account_mgr;\n  pool.query('insert into employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)', [first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  var first_name = req.body.first_name;\n  pool.query(\"update employees set first_name=$1 where employee_id=$2\", [first_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from employees where employee_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); //Tabel Dependent\n\napp.get('/api/dependent', function (req, res) {\n  pool.query('select * from dependents', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from dependents where dependent_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/dependent/', function (req, res) {\n  var _req$body6 = req.body,\n      dependent_id = _req$body6.dependent_id,\n      first_name = _req$body6.first_name,\n      last_name = _req$body6.last_name,\n      relationship = _req$body6.relationship,\n      employee_id = _req$body6.employee_id;\n  pool.query('insert into dependents (dependent_id,first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4,$5)', [dependent_id, first_name, last_name, relationship, employee_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  var first_name = req.body.first_name;\n  pool.query(\"update dependents set first_name=$1 where dependent_id=$2\", [first_name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('delete from dependents where dependent_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["dotenv","config","Pool","require","pool","host","user","password","database","port","app","express","use","json","process","env","PORT","listen","console","log","get","req","res","query","error","result","status","rows","id","params","post","region_name","body","rowCount","put","name","country_id","country_name","region_id","location_id","street_address","postal_code","city","state_province","department_id","department_name","job_id","job_title","min_salary","max_salary","first_name","last_name","email","phone_number","hire_date","salary","manager_id","proj_account_mgr","dependent_id","relationship","employee_id"],"sourceRoot":"C:\\xampp\\Quiz NodeJs\\server\\","sources":["index.js"],"sourcesContent":["import dotenv from \"dotenv\"\r\nimport express from \"express\"\r\ndotenv.config()\r\n\r\nconst Pool = require('pg').Pool;\r\nconst pool = new Pool({\r\n    host : \"localhost\",\r\n    user : \"postgres\",\r\n    password  : \"kevingreat\",\r\n    database : \"W2Q1\",\r\n    port : 5432\r\n})\r\n\r\nconst app = express()\r\napp.use(express.json())\r\n\r\nconst port = process.env.PORT || 3003\r\n\r\napp.listen(port,()=>{console.log('Server listening on port '+port)})\r\n\r\n//Tabel Region\r\napp.get('/api/region',(req,res)=>{\r\n    pool.query('select * from regions',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/region/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from regions where region_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/region/',(req,res)=>{\r\n    const {region_name} = req.body\r\n    pool.query('insert into regions (region_name) values ($1)',\r\n    [region_name],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/region/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {name} = req.body\r\n    pool.query(\"update regions set region_name=$1 where region_id=$2\",\r\n    [name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/region/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from regions where region_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Country\r\napp.get('/api/country',(req,res)=>{\r\n    pool.query('select * from countries',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/country/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from countries where country_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/country/',(req,res)=>{\r\n    const {country_id,country_name,region_id} = req.body\r\n    pool.query('insert into countries (country_id,country_name,region_id) values ($1,$2,$3)',\r\n    [country_id,country_name,region_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/country/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {country_name} = req.body\r\n    pool.query(\"update countries set country_name=$1 where country_id=$2\",\r\n    [country_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/country/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from countries where country_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Location\r\napp.get('/api/location',(req,res)=>{\r\n    pool.query('select * from locations',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/location/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from locations where location_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/location/',(req,res)=>{\r\n    const {location_id, street_address, postal_code, city, state_province, country_id} = req.body\r\n    pool.query('insert into locations (location_id, street_address, postal_code, city, state_province, country_id) values ($1,$2,$3,$4,$5,$6)',\r\n    [location_id, street_address, postal_code, city, state_province, country_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/location/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {city} = req.body\r\n    pool.query(\"update locations set city=$1 where location_id=$2\",\r\n    [city,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/location/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from locations where location_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Departments\r\napp.get('/api/department',(req,res)=>{\r\n    pool.query('select * from departments',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/department/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from departments where department_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/department/',(req,res)=>{\r\n    const {department_id,department_name, location_id} = req.body\r\n    pool.query('insert into departments (department_id,department_name, location_id) values ($1,$2,$3)',\r\n    [department_id,department_name, location_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/department/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {department_name} = req.body\r\n    pool.query(\"update departments set department_name=$1 where department_id=$2\",\r\n    [department_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/department/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from departments where department_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Jobs\r\napp.get('/api/job',(req,res)=>{\r\n    pool.query('select * from jobs',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/job/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from jobs where job_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/job/',(req,res)=>{\r\n    const {job_id,job_title, min_salary,max_salary} = req.body\r\n    pool.query('insert into jobs (job_id,job_title, min_salary,max_salary) values ($1,$2,$3,$4)',\r\n    [job_id,job_title, min_salary,max_salary],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/job/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {job_title} = req.body\r\n    pool.query(\"update jobs set job_title=$1 where job_id=$2\",\r\n    [job_title,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/job/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from jobs where job_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Employee\r\napp.get('/api/employee',(req,res)=>{\r\n    pool.query('select * from employees',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/employee/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from employees where employee_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/employee/',(req,res)=>{\r\n    const {first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr} = req.body\r\n    pool.query('insert into employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)',\r\n    [first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, proj_account_mgr],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/employee/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {first_name} = req.body\r\n    pool.query(\"update employees set first_name=$1 where employee_id=$2\",\r\n    [first_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/employee/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from employees where employee_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\n//Tabel Dependent\r\napp.get('/api/dependent',(req,res)=>{\r\n    pool.query('select * from dependents',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.get('/api/dependent/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('select * from dependents where dependent_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if(error){\r\n        throw error;\r\n        }\r\n        res.status(200).json(result.rows)\r\n    })\r\n})\r\n\r\napp.post('/api/dependent/',(req,res)=>{\r\n    const {dependent_id,first_name, last_name, relationship, employee_id} = req.body\r\n    pool.query('insert into dependents (dependent_id,first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4,$5)',\r\n    [dependent_id,first_name, last_name, relationship, employee_id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.put('/api/dependent/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    const {first_name} = req.body\r\n    pool.query(\"update dependents set first_name=$1 where dependent_id=$2\",\r\n    [first_name,id],\r\n    (error,result) =>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})\r\n\r\napp.delete('/api/dependent/:id',(req,res)=>{\r\n    const {id} = req.params\r\n    pool.query('delete from dependents where dependent_id = $1',\r\n    [id],\r\n    (error,result)=>{\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        res.status(200).json(result.rowCount)\r\n    })\r\n})"],"mappings":"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"}},"mtime":1655371815027}}